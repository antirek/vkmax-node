import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

import { MaxClient } from '../src/index.js';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// ID —á–∞—Ç–∞ —Å –í–∞—Å–∏–ª–∏–µ–º
const VASILIY_CHAT_ID = 60815114;

/**
 * –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –æ–¥–Ω–∏–º –º–µ—Ç–æ–¥–æ–º
 */
async function simplePhotoUpload() {
    console.log('üì∏ –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ MaxClient.uploadAndSendPhoto()\n');
    
    const client = new MaxClient();
    
    try {
        // –ß–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        console.log('üîê –ß–∏—Ç–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è...');
        const tokenPath = path.join(__dirname, 'login_token.txt');
        const token = await fs.readFile(tokenPath, 'utf-8');
        const cleanToken = token.trim();
        
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
        await client.connect();
        await client.loginByToken(cleanToken);
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã\n');
        
        // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Ñ–æ—Ç–æ
        console.log('üìÅ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª test-photo.png...');
        const photoPath = path.join(__dirname, 'test-photo.png');
        const photoData = await fs.readFile(photoPath);
        console.log('‚úÖ –§–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω:', `${Math.round(photoData.length / 1024 * 100) / 100} KB\n`);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –æ–¥–Ω–∏–º –º–µ—Ç–æ–¥–æ–º
        console.log('üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º PNG —Ñ–æ—Ç–æ –æ–¥–Ω–∏–º –º–µ—Ç–æ–¥–æ–º...');
        const response = await client.uploadAndSendPhoto(
            VASILIY_CHAT_ID,
            photoData,
            'test-photo.png',
            'üñºÔ∏è PNG —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ uploadAndSendPhoto()!'
        );
        
        console.log('‚úÖ –£–°–ü–ï–•! –§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
        console.log('üì® ID —Å–æ–æ–±—â–µ–Ω–∏—è:', response.payload?.message?.id);
        console.log('üì∑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–ª–æ–∂–µ–Ω–∏–π:', response.payload?.message?.attaches?.length || 0);
        
        if (response.payload?.message?.attaches?.[0]) {
            const attach = response.payload.message.attaches[0];
            console.log('üñºÔ∏è –î–µ—Ç–∞–ª–∏ —Ñ–æ—Ç–æ:', {
                type: attach._type,
                photoId: attach.photoId,
                width: attach.width,
                height: attach.height
            });
        }
        
        console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–∞—Ç —Å –í–∞—Å–∏–ª–∏–µ–º!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error instanceof Error ? error.message : String(error));
    } finally {
        if (client.isConnected) {
            client.disconnect();
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–º–µ—Ä
simplePhotoUpload().catch(console.error);
